<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>offline on GGfu Personal Study - 學習筆記</title><link>https://ggfu0114.github.io/tags/offline/</link><description>Recent content in offline on GGfu Personal Study - 學習筆記</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Thu, 31 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://ggfu0114.github.io/tags/offline/index.xml" rel="self" type="application/rss+xml"/><item><title>Serverless offline 開發設定 - 基礎篇</title><link>https://ggfu0114.github.io/posts/aws_lambda_dev_offline/</link><pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate><guid>https://ggfu0114.github.io/posts/aws_lambda_dev_offline/</guid><description>Serverless offline 開發設定 - 基礎篇 說明
為了加速開發的效率，開發過程中不會想要每次都佈署到AWS做測試或開發。Serverless offline套件可以解決這件事情。透過模擬 AWS λ and API Gateway ，開發者在本機端就可以run一個的server去模擬再AWS服務的情況。
前置作業
需要事先安裝過 serverless package sudo npm install serverless -g 安裝serverless offline套件 npm install serverless-offline --save-dev
使用方法
在原本專案的serverless.yml上添加程式碼
plugins plugins: - serverless-offline server conf 將server在 3000 PORT 開啟; 開放所有的 IP 都可以存取
custom: serverless-offline: host: &amp;#34;0.0.0.0&amp;#34; port: 3000 在Terminal上啟動 serverless offline server serverless offline start 接著就可以用各種工具去發出request做開發測試
:::danger
執行API request出現錯誤 { &amp;#34;statusCode&amp;#34;: 400, &amp;#34;error&amp;#34;: &amp;#34;Bad Request&amp;#34;, &amp;#34;message&amp;#34;: &amp;#34;Invalid cookie value&amp;#34; } 經過測試，如果將IP綁在127.</description></item></channel></rss>