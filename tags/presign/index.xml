<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>presign on GGfu Personal Study - 學習筆記</title><link>https://ggfu0114.github.io/tags/presign/</link><description>Recent content in presign on GGfu Personal Study - 學習筆記</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sun, 06 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ggfu0114.github.io/tags/presign/index.xml" rel="self" type="application/rss+xml"/><item><title>S3 multipart uplaod prsigned url教學</title><link>https://ggfu0114.github.io/posts/s3-multipart-uplaod-prsigned-url%E6%95%99%E5%AD%B8/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://ggfu0114.github.io/posts/s3-multipart-uplaod-prsigned-url%E6%95%99%E5%AD%B8/</guid><description>當系統需要做續傳功能或大檔上傳的功能時，S3提供multipart upload的功能，可將檔案切分上傳，最後到S3再進行合併。主要分成3步驟：
Multipart upload init 上傳一個或多個parts Multipart upload complete 上傳初始化 檔案要上傳到S3時，需指明當這個 multipart upload 完成組合成一個 object 後，object 的 key 值為何，若希望以 multipart upload 建立的 object 帶有自訂的 metadata，亦須在 multipart upload 初始化時提供。成功初始化後，S3會建立一組 upload ID 當成未來上傳為此 object 的依據。
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;InitiateMultipartUploadResult xmlns=&amp;#34;http://s3.amazonaws.com/doc/2006-03-01/&amp;#34;&amp;gt; &amp;lt;Bucket&amp;gt;test201705021548&amp;lt;/Bucket&amp;gt; &amp;lt;Key&amp;gt;hello.jpg&amp;lt;/Key&amp;gt; &amp;lt;UploadId&amp;gt;QAUmLo15J46MyspVk6PgCPg7C1yk9RdOR2XfsdwEe2xDVS33HTh.cAJzFfwcug--&amp;lt;/UploadId&amp;gt; &amp;lt;/InitiateMultipartUploadResult&amp;gt; 操作步驟
為 init multipart 的需求產出數位簽章。 var StringToSign = &amp;#34;POST&amp;#34; + &amp;#34;\n&amp;#34; + &amp;#34;&amp;#34; + &amp;#34;\n&amp;#34; + &amp;#34;&amp;#34; + &amp;#34;\n&amp;#34; + new Date().toUTCString() + &amp;#34;\n&amp;#34; + &amp;#34;/test201705021548/hello.jpg?uploads&amp;#34;; init成功時，S3會回傳對應的 upload ID</description></item><item><title>AWS S3 REST 數位簽章與驗證</title><link>https://ggfu0114.github.io/posts/aws_s3_signed_url/</link><pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate><guid>https://ggfu0114.github.io/posts/aws_s3_signed_url/</guid><description>AWS S3 REST簽章與驗證 假設在S3裡的物件只設定給 &amp;ldquo;authenticated AWS user&amp;rdquo; 操作，那我們要如何利用數位簽章讓使用者可以透過 api resquest 去做身份認可(identity)並操作S3裏面的物件。 假設在S3上我們有一個name為 wisigntest 的bucket，裏面存在一個名為hello.jpg的物件，設定為 &amp;ldquo;authenticated AWS user&amp;rdquo; 可以R/W。我們將紀錄如何使用API去存取S3物件。 簡易瀏覽物件
GET /hello.jpg HTTP/1.1 Host: https://wisigntest.s3-ap-northeast-1.amazonaws.com Date: Fri, 28 Apr 2017 05:56:29 GMT Authorization: AWS AKIAIOSFODNN7EXAMPLE:frJIUN8DYpKDtOLCwo//yllqDzg= 下面是我用Postman去讀取S3檔案的畫面 The Authentication Header
下面的格式是主要傳送給 API 的 Header 上要添加的 Authorization 資訊，透過Signature，AWS可以驗證此次的操作是否有效。
Authorization: AWS {AWSAccessKeyId}:{Signature} 下面是 Nodejs 計算的Signature程式碼
var crypto = require(&amp;#34;crypto&amp;#34;); // from IAM role var secret_access_key = &amp;#39;64nd6BY7gTPDspq54gQcRth5dvORNdDvqL4BZ5zd&amp;#39;; var access_key_id = &amp;#39;AKIAIUHT2BNZP65ADZKQ&amp;#39; var StringToSign = &amp;#34;GET&amp;#34; + &amp;#34;\n&amp;#34; + &amp;#34;&amp;#34; + &amp;#34;\n&amp;#34; + &amp;#34;&amp;#34; + &amp;#34;\n&amp;#34; + new Date().</description></item></channel></rss>